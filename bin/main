#!/usr/bin/env ruby
require_relative '../lib/linters.rb'
require 'colorize'
lint = Linters.new

print '+-+-+-+-+'.red
print '+-+'.green
print "+-+-+-+-+-+-+\n".yellow
print '|R|U|B|Y|'.red
print '|-|'.green
print "|L|I|N|T|E|R|\n".yellow
print '+-+-+-+-+'.red
print '+-+'.green
print "+-+-+-+-+-+-+\n".yellow

file_list = ['lint-bracket-no.css', 'lint-bracket-missing.css', 'lint-empty-rule.css','lint-important.css', 'lint-dry.css', 'lint-property.css']
  
puts "\n\nPlease type the name of your test file (your-file.css) or select any 'file_id' between '1 to 6' for linter check\n".white
file_list.each_with_index {|file, id| puts "#{id + 1}-#{file}\n"}
selected_file = gets.chomp

loop do
  if selected_file.match(/^[1-6]|.css$/).nil?
        puts 'Invalid entry. Please type the full file name including ".css" extension or select a number between 1..6'
  elsif !(selected_file.match(/[1-6]/).nil?) && selected_file.size == 1
        valid = true
        selected_file = lint.which_default_file?(selected_file, file_list)
        puts "processing default test file: #{selected_file}"
  elsif !(selected_file.match(/.css$/).nil?) && selected_file.size >= 4
        valid = true
        selected_file = 'test_files/'.concat(selected_file)
        puts "processing your test file: #{selected_file}"
  end
  break if valid == true
end

# lint.bracket_checker(selected_file)
lint.empty_rule_checker(selected_file)

if lint.empty_rule_checker(selected_file).length.zero?
  puts 'Emty Rule Check Status: Passed'.green
 else
  puts 'Check Status: Failed'.red
  puts 'Syntax error: Empty Rule'.red
  puts "Please check line(s): #{lint.empty_rule_checker(selected_file)}".red
end

lint.property_name_checker(selected_file)

  if !(lint.property_name_checker(selected_file).length.zero?)
    puts 'Check Status: Failed'.red
    puts 'Syntax error: Property Name'.red
    puts "Please check line(s): #{lint.property_name_checker(selected_file)}".red
  elsif lint.property_name_checker(selected_file).length.zero?
    puts 'Property Name Check Status: Passed'.green
  end         

if lint.dry_violation_checker(selected_file).length.zero?
   puts 'DRY Check Status: Passed'.green
 else
   puts 'Check Status: Warning - DRY violation'.yellow
   puts "Check for line(s): #{lint.dry_violation_checker(selected_file)} ".yellow
end

if lint.important_tag_checker(selected_file) == true
      puts '!important Tag Check Status: Passed'.green
 else 
      puts 'Check Status: Warning - !important tag recommended limit : 9'.yellow
      puts "Over usage of '!important' tag - Please check lines: #{lint.tag_lines}".yellow 
end

puts "\nThank you for your time & support\n".white
print '|R|U|B|Y| '.red
print '|L|I|N|T|E|R| '.yellow
abort 'ending...'